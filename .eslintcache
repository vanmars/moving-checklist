[{"/Users/vanessa/Desktop/react/moving/src/index.js":"1","/Users/vanessa/Desktop/react/moving/src/App.js":"2","/Users/vanessa/Desktop/react/moving/src/reportWebVitals.js":"3","/Users/vanessa/Desktop/react/moving/src/components/ItemDetail.js":"4","/Users/vanessa/Desktop/react/moving/src/components/Header.js":"5","/Users/vanessa/Desktop/react/moving/src/components/Navbar.js":"6","/Users/vanessa/Desktop/react/moving/src/components/MovingList.js":"7","/Users/vanessa/Desktop/react/moving/src/contexts/ChecklistContext.js":"8","/Users/vanessa/Desktop/react/moving/src/components/NewItemForm.js":"9","/Users/vanessa/Desktop/react/moving/src/components/Splash.js":"10","/Users/vanessa/Desktop/react/moving/src/firebase.js":"11"},{"size":765,"mtime":1609566282235,"results":"12","hashOfConfig":"13"},{"size":2067,"mtime":1609465643333,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1609365241792,"results":"15","hashOfConfig":"13"},{"size":1752,"mtime":1609560154121,"results":"16","hashOfConfig":"13"},{"size":589,"mtime":1609409218812,"results":"17","hashOfConfig":"13"},{"size":519,"mtime":1609463988659,"results":"18","hashOfConfig":"13"},{"size":1917,"mtime":1609411163248,"results":"19","hashOfConfig":"13"},{"size":1132,"mtime":1609560349408,"results":"20","hashOfConfig":"13"},{"size":1003,"mtime":1609408911204,"results":"21","hashOfConfig":"13"},{"size":414,"mtime":1609464382691,"results":"22","hashOfConfig":"13"},{"size":615,"mtime":1609564809344,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"j24mx5",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/vanessa/Desktop/react/moving/src/index.js",[],"/Users/vanessa/Desktop/react/moving/src/App.js",[],["49","50"],"/Users/vanessa/Desktop/react/moving/src/reportWebVitals.js",[],"/Users/vanessa/Desktop/react/moving/src/components/ItemDetail.js",[],"/Users/vanessa/Desktop/react/moving/src/components/Header.js",[],"/Users/vanessa/Desktop/react/moving/src/components/Navbar.js",[],"/Users/vanessa/Desktop/react/moving/src/components/MovingList.js",["51"],"import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport 'fontsource-roboto';\nimport Typography from '@material-ui/core/Typography';\nimport { ChecklistContext } from '../contexts/ChecklistContext';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nconst MovingList = (props) => {\n  const { setSelectedItem } = props\n  const { items, deleteItem, toggleComplete } = useContext(ChecklistContext);\n\n  return ( \n    <div className='moving-list'>\n      <Typography variant=\"subtitle2\" component=\"p\" className=\"items-counter\">You have {items.length} items on your checklist.</Typography>\n\n      <ul>\n        {items.map(item => {\n          const icon = item.complete ? \n          <CheckBoxIcon \n            onClick={()=>toggleComplete(item.id)} \n            fontSize='medium'\n            color='disabled'\n            className=\"checkbox\"\n          /> : \n          <CheckBoxOutlineBlankIcon \n            onClick={()=>toggleComplete(item.id)}  \n            fontSize='medium'\n            color='disabled'\n            className=\"checkbox\"\n          />\n\n          return (\n            <React.Fragment>\n              <div className=\"item-div\" key={item.id}>\n                { icon }\n                <Typography variant=\"body2\" onClick={() => deleteItem(item.id)}>{item.name}  </Typography>\n                <ArrowForwardIosIcon \n                  onClick={() => setSelectedItem(item)} \n                  fontSize=\"small\"\n                  color=\"disabled\"\n                  className='forward-arrow'\n                />\n              </div>\n              <hr />\n            </React.Fragment>\n          )\n        })}\n      </ul>\n    </div>\n   );\n}\n\nMovingList.propTypes = {\n  setSelectedItem: PropTypes.func\n}\n \nexport default MovingList;","/Users/vanessa/Desktop/react/moving/src/contexts/ChecklistContext.js",["52","53"],"import React, { useState, createContext } from 'react';\nimport { v4 } from 'uuid';\n\nexport const ChecklistContext = createContext();\n\nconst ChecklistContextProvider = (props) => {\n  const [items, setItems] = useState([\n    { name: 'Pack office books', complete: false, id: 1},\n    { name: 'Reserve U-Haul', complete: false, id: 2}\n  ])\n\n  const addItem = (name) => {\n    setItems([...items, {name, complete: false, id: v4()} ]);\n  }\n\n  const deleteItem = (id) => {\n    setItems(items.filter(item => item.id !== id));\n  }\n\n  const updateName = (id, name) => {\n    let item = items.filter(item => item.id == id )[0];\n    item.name = name;\n    setItems(items.filter(item => item.id !== id).concat([...item]));\n  }\n\n  const toggleComplete = (id) => {\n    let item = items.filter(item => item.id == id)[0];\n    item.complete = !item.complete;\n    setItems(items.filter(item => item.id !== id).concat([...item]));\n  }\n\n  return ( \n    <ChecklistContext.Provider value={{ items, addItem, deleteItem, updateName, toggleComplete }}>\n      { props.children }\n    </ChecklistContext.Provider>\n   );\n}\n \nexport default ChecklistContextProvider;","/Users/vanessa/Desktop/react/moving/src/components/NewItemForm.js",[],"/Users/vanessa/Desktop/react/moving/src/components/Splash.js",[],"/Users/vanessa/Desktop/react/moving/src/firebase.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":1,"column":29,"nodeType":"60","messageId":"61","endLine":1,"endColumn":37},{"ruleId":"62","severity":1,"message":"63","line":21,"column":45,"nodeType":"64","messageId":"65","endLine":21,"endColumn":47},{"ruleId":"62","severity":1,"message":"63","line":27,"column":45,"nodeType":"64","messageId":"65","endLine":27,"endColumn":47},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]